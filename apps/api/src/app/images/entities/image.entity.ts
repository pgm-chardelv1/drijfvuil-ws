import { Field, ObjectType } from '@nestjs/graphql';
import {
  Column,
  CreateDateColumn,
  Entity,
  JoinColumn,
  OneToOne,
  PrimaryGeneratedColumn,
  UpdateDateColumn,
} from 'typeorm';
import { Report } from '../../reports/entities/report.entity';

/**
 * Define the Image TypeORM entity
 * and GraphQL ObjectType
 *
 * @export DbImage
 * @class Image
 */
@Entity('dbImage')
@ObjectType()
export class DbImage {
  /**
   * Image ID
   *
   * @type {string} Autogenerated uuid
   * @memberof DbImage
   */
  @PrimaryGeneratedColumn('uuid')
  @Field(() => String, { description: 'Image ID' })
  id: string;

  /**
   * Image URL
   *
   * @type {string}
   * @memberof DbImage
   */
  @Column('varchar')
  @Field(() => String, { description: 'Image URL', nullable: true })
  url?: string;

  /**
   * Image key (Filename on Amazon S3)
   *
   * @type {string}
   * @memberof DbImage
   */
  @Column('varchar')
  @Field(() => String, { description: 'Image Key' })
  key: string;

  /**
   * Autogenerated field with Date the image was created
   *
   * @type {Date}
   * @memberof DbImage
   */
  @CreateDateColumn()
  @Field(() => Date, { description: 'Image was created at' })
  createdAt: Date;

  /**
   * Autogenerated field with Date the image was updated
   *
   * @type {Date}
   * @memberof DbImage
   */
  @UpdateDateColumn()
  @Field(() => Date, { description: 'Image last updated at' })
  updatedAt: Date;

  /**
   * Relations to Report entity
   * One Image can belong to one Report
   * @type {Report}
   * @memberof DbImage
   */
  @OneToOne(() => Report, (report) => report.dbImage)
  @Field(() => Report, {
    description: 'The report the image is linked to',
    nullable: true,
  })
  @JoinColumn({ name: 'reportId', referencedColumnName: 'id' })
  report?: Report;
}
